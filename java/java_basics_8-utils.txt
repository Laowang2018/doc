工具类学习
java开发者写好的类：

包装类（封装类）
数学相关
日期相关
字符串
集合相关
异常相关
输入输出相关
线程相关
网络通信
反射注解
GUI Swing

Object
	java.lang包下
	所有对象的父类，继承链的最上层的一个类。

	getClass(); 获取运行时类模板对象。
	hashCode(); 获取运行时该对象的哈希码值
	equals(Object obj); 比较两个对象是否相等，默认比较的是引用地址。return (this == obj);
	clone(); 克隆并返回对象的副本。
	toString();   return getClass().getName() + "@" + Integer.toHexString(hashCode());
	notyfy(); 唤醒正在等待对象监视器的单个线程。
	notifyAll(); 唤醒正在等待对象监视器的所有线程。
	wait(); 导致当前线程等待，直到另一个线程调用该对象的notify()方法或notifyAll()方法。
	finalize(); 当垃圾收集确定不再有对该对象的引用时，垃圾收集器在对象上调用该对象。

	通常情况下Object类中的方法都是用来被重写的：一般toString()和hashCode()和equals()方法都会被重写。

System
	java.lang包下
	默认继承Object类
	单例模式的类
	字段：
		in
		out
		err
	方法：
		currentTimeMillis(); 在1970年1月1日UTC之间的当前时间和午夜之间的差异，以毫秒为单位。
		arraycopy(Object src,int srcPos,Object dest,int destPos,int length); 复制源数组指定位置上的内容到目标数组。
		exit(int status); 终止当前运行的Java虚拟机。
		gc(); 垃圾回收，在回收前会调用对象的finalize()方法。
		
Runtime	
	java.lang包下
	单例模式的类
	方法：
		maxMemory(); 返回Java虚拟机将尝试使用的最大内存量。 当前可以扩大到什么程度，最大限度
		totalMemory(); 返回Java虚拟机中的内存总量。 当前初始化的
		freeMemory(); 返回Java虚拟机中的可用内存量。 当前初始化的减去用到的
Enum	
	java.lang包下
	抽象类
	所有自定义的枚举类型都默认继承了此类
	子类ElementType中有values()方法，返回此类枚举中的所有对象数组。
	方法：
		name();返回此枚举常量的名称，与其枚举声明中声明的完全相同。
		ordinal();返回枚举对象的序号（从0开始）。
		toString();可以被重写。
Scanner	
	java.util包下
	Scanner sc = new Scanner(System.in);
	sc.nextLine();取出一行
	sc.nextInt();取出下一个数字，会把回车行保留在行中。
	注意：
		1.nextInt()只会读取数值，剩下"\n"还没有读取，并将cursor放在本行中。
		2.nextLine()会读取"\n"，并结束（nextLine() reads till the end of line \n）。
		3.如果想要在nextInt()后读取一行，就得在nextInt()之后额外加上cin.nextLine()。

	
包装类（封装类）: 自动拆装包
	byte Byte
	short Short
	int Integer
	long Long
	float Float
	double Double
	char Character
	boolean Boolean
	
	类所在的包：java.lang包下 不需要import导包直接使用
	类的关系 自己默认继承 实现： 都默认继承父类Number(Character除外),实现了Seriablizable Comparable
	类中提供的常用方法:都带有自己对应类型参数的构造方法 包装类中都有构造方法重载（除了Character） 带String类型
	是否可以创建对象 调用 方法本身静态的:都提供有构造方法创建对象来调用属性/方法
	
	Integer a = 10;
	Integer b = 10;
	Integer c = new Integer(10);
	Integer d = new Integer(10);
	用==号和equals()判断abcd是否相等关系
	
	Integer类加载的时候，自己有有一个静态的空间，空间内立即加载Integer类型的数组，内存储256个Integer对象-128~127，如果我们用的对象大小在这个范围内，直接取静态区中的找对应的对象，如果我们用的对象范围超出了这个大小范围，会帮我们创建一个新的Integer对象。
	
	其他的包装类型里面没有自己的静态空间，所以每次取值都是自己装箱，就是自动new Double(12.4);对象所以 Double a = 12.3;Double b = 12.3;System.out.println(a==b);//false
	
Math
	与数学相关的类
	java.lang包下
	Math构造方法是私有的 我们不能直接创建该类对象
	由于Math中提供的方法/属性都是static 不需要创建对象 便可以直接使用
	方法：
		abs();返回给定数字的绝对值
		ceil();向上取整
		floor();向下取整
		rint();临近整数值，如果两边距离一样，取偶数
		round();四舍五入
		max(a,b); min(a,b);取两数中最大值和最小值
		pow(a,b);a的b次方
		sqrt(a);a的平方根
		random();随机产生一个[0.0~1.0)大小区间的数（不够精确，建议使用Random）
Random
	java.util包下类 需要import导入
	没有任何继承关系 继承默认Object
	查找构造方法--->如何创建对象
	方法：
		nextInt();随机产生一个整数 int范围
		nextInt(a);随机产生一个有边界的整数[0~a)大小范围 如果a<0会产生：IllegalArgumentException
		nextFloat();随机产生[0.0~1.0)大小区间的数
		nextBoolean();随机产生一个boolean值
		
UUID
	java.util包下类 需要import导入
	没有任何继承关系 继承默认Object
	UUID uuid = UUID.randomUUID();
	产生一个32位的随机元素 每一个位置是一个16进制的数字
	
BigInteger类 
	大整数
	java.math包下 需要导包
	继承自Number类
	创建对象：BigInteger bi = new BigInteger("1234");
	方法:
		add(); 加
		subtract(); 减
		multiply();	乘
		divide(); 除
		
BigDecimal类
	超过了double的取值范围
	java.math包
	继承Number类
	方法：
		add(); 加
		subtract(); 减
		multiply();	乘
		divide(); 除
		setScale(2,BigDecimal.ROUND_DOWN);保留两位小数，向下舍取
		
DecimalFormat类
	将一个小数格式化成字符串
	java.text包下
	DecimalFormat df = new DecimalFormat("000.###"); //模式如果0：占位，没有也会用0占上，#：占位，如果没有则用空串
	String value = df.format(13.45678);
	value;//013.457 超过格式长度会四舍五入
	
Date
	日期相关类 System.currentTimeMillis();//返回从计算机元年至今的时间差的毫秒数
	java.util包下
	一般都是空参构造和有一个long的构造方法
		long timeMillis = System.currentTimeMillis();
		Date date = new Date(timeMillis);
	方法：
		before();判断当前时间是不是在参数时间之前
		after();判断当前时间是不是在参数时间之后 
		setTime();//setTime(1572247572286);
		getTime();//返回当前时间对象的毫秒值
		
SimpleDateFormat
	格式化时间的类。
	继承DateFormat类：DateFormat是一个抽象类
	java.text包下
	SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
	String val = sdf.format(new Date());
	System.out.println(val);//2019-10-28 16:06:25

Calendar
	日历类：抽象类
	可以设置时间详细数据
	java.util包下
	默认继承Object类
	方法：
		before();---Date
		after();---Date
		setTime();---Date
		getTime();---Date
		getTimeInMillis();---time long型
		getTimeZone();---TimeZone对象
		
		Calendar cld = Calendar.getInstance();
        int i = cld.get(Calendar.YEAR);
        int i1 = cld.get(Calendar.MONTH);//这里的月份是从0~11所以要注意
        int i2 = cld.get(Calendar.DATE);//DAY_OF_MONTH 一样的 表示日期的意思 也表示月中的哪一天
		cld.set(Calendar.MONTH, 12);//设置时间
        cld.set(Calendar.YEAR,2029);//设置时间
        cld.set(Calendar.DATE,30);//设置时间
		
		TimeZone timeZone = cld.getTimeZone();//获取当前时区对象
TimeZone
	java.util包下
	可以通过Calendar对象.getTimeZone() 或者 TimeZone.getDefault();
	常用方法
		timeZone.getID();
		timeZone.getDisplayName();
		
		
		
字符串相关的类：
常见问题：
	== 与 equals()区别
		==：基本类型比较的是值  引用类型比较的是地址
		equals()：在String中首先比较地址，地址不同，再比较敏每一个对应位置上的char
	String的不可变特性
		长度 内容不可变
		在String类中包含一个数组
		private final char[] value;//存储String的每一个字符
		final最终的不可变的--》地址不让改变 数组的长度本身不可变
		private私有的当前类中--》数组中的内容也不能改变
		
	String与StringBuffer区别
	StringBuffer与StringBuilder区别
	String对象的存储
	String中常用方法
String  引用类型
	java.lang包下不用导包 没有继承关系 实现三个接口Serializable CharSequence Comparable
	找寻构造方法创建对象
		String str = "abc";//字符串常量池直接引用过来
		String str = new String();//构建空字符串对象
		String str = new String("abc");//有参构建对象
		String是一个非常特殊的引用数据类型 可以像基本类型一样创建 赋值 可以用+号拼接
	String类型的特性
	String类型中的方法 20+
	String是个用途很广，花时间
	方法：
		1.equals();//判断是否相等：如果引用相同，直接返回true,否则看长度：长度相同遍历value字符数组一个一个的比
		2.equalsIgnoreCase(String anotherString);//忽略大小写进行比较
		3.hashCode();//重写Object中的，h = 31 * h + val[i];便利每一个字符这样做，得出hash码是一个int型
		4.compareTo(String str);//实现Comparable接口实现的。字典对比法，找出最短的，便利挨个比相同位置上的char，
			返回对应位置char差值 ，如果都相等那么直接返回长度差
		5.compareToIgnoreCase(String str);//忽略大小写进行比较
		6.toString();//重写Object中的，输出字符串字面值 不再是 类名@hashCode了
		
		7.charAt(int index);//返回指定位置上的那个char值
		8.codePointAt(int index);//返回给定index对应位置的那个char所对应的code码 和编码有关
		9.length();//返回字符串的长度
		10.concat(String str);//给定字符串拼接在当前字符串之后  concat()与+号的拼接性能问题
		
		11.contains(CharSequence s);//判断一个字符串是是否包含s字符序列：s可以是实现CharSequence接口的各种对象
		12.startsWith(String prefix);//判断字符串是否以prefix开关
		13.endsWith(String suffix);//判断字符串是否以suffix结尾
		14.getBytes();//把当前String转化成字节数组
		15.toCharArray();//把当前String对象转化成字符数组 和编码有关
		16.indexOf("a");//找寻给定元素在字符串中出现的位置 多个重载方法 若不存在返回-1
		17.lastIndexOf();//寻找给定元素最后一次出现的位置
		18.isEmpty();//判断当前字符串是否为空字符串 length是否为0
		19.replace(old,new);//替换所有的old为new
		20.replaceAll(old,new);//替换所有的old为new
		21.replaceFirst(old,new);//换掉第一次出现的那个字串
		22.split(String str);//以所有str为分割符进行分割
		23.split(String str, int limit);//以str为分割符分割，只能分割成limit段
		24.substring(int beginIndex);//从beginIndex截取到末尾
		25.substring(int beginIndex, int endIndex);//截取当前字符串的一部分，[beginIndex,endIndex)
		26.toUpperCase();//转换成大写
		27.toLowerCase();//转换成小定
		28.trim();//去掉字符串前后多余的空格
		29.matches(String regex);//是否可以匹配正则regex



练习：
	将字符串反转 ok-->ko
	
	将给定符串的正序和反序进行连接 ok --> okko
	判断给定字符串是否是回文 abccba       abcba
	将给定字符串右位移x个位置  helloworld---> ldhellowor
	寻找出若干字符串最长的那个 
	统计给定字母在字符串中出现的次数
	将给定字符串的每一个单词首字母大写
	获取给定字串中的全部数字 
	